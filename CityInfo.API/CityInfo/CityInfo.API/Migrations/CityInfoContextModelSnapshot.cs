// <auto-generated />
using CityInfo.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfo.API.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    partial class CityInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CityInfo.API.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Description = "The Big Apple",
                            Name = "New York"
                        },
                        new
                        {
                            Id = 5,
                            Description = "One of the busiest cities in the world",
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = 6,
                            Description = "The City of Light",
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 7,
                            Description = "The capital of England",
                            Name = "London"
                        },
                        new
                        {
                            Id = 8,
                            Description = "The largest city in Australia",
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Home of the famous Christ the Redeemer statue",
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Known for its harbour and Table Mountain",
                            Name = "Cape Town"
                        },
                        new
                        {
                            Id = 11,
                            Description = "The capital of Russia",
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = 12,
                            Description = "The capital of China",
                            Name = "Beijing"
                        },
                        new
                        {
                            Id = 13,
                            Description = "The largest city in Africa",
                            Name = "Cairo"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfInterests");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            CityId = 4,
                            Description = "A colossal neoclassical sculpture on Liberty Island",
                            Name = "Statue of Liberty"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 5,
                            Description = "A communications and observation tower in the Shiba-koen district",
                            Name = "Tokyo Tower"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 6,
                            Description = "A wrought-iron lattice tower on the Champ de Mars",
                            Name = "Eiffel Tower"
                        },
                        new
                        {
                            Id = 8,
                            CityId = 7,
                            Description = "A giant Ferris wheel on the South Bank of the River Thames",
                            Name = "London Eye"
                        },
                        new
                        {
                            Id = 9,
                            CityId = 8,
                            Description = "A multi-venue performing arts centre at Sydney Harbour",
                            Name = "Sydney Opera House"
                        },
                        new
                        {
                            Id = 10,
                            CityId = 9,
                            Description = "An Art Deco statue of Jesus Christ in Rio de Janeiro",
                            Name = "Christ the Redeemer"
                        },
                        new
                        {
                            Id = 11,
                            CityId = 10,
                            Description = "A flat-topped mountain forming a prominent landmark overlooking the city of Cape Town",
                            Name = "Table Mountain"
                        },
                        new
                        {
                            Id = 12,
                            CityId = 11,
                            Description = "A city square in Moscow",
                            Name = "Red Square"
                        },
                        new
                        {
                            Id = 13,
                            CityId = 12,
                            Description = "A series of fortifications that were built across the historical northern borders of China",
                            Name = "Great Wall of China"
                        },
                        new
                        {
                            Id = 14,
                            CityId = 13,
                            Description = "The oldest of the Seven Wonders of the Ancient World, and the only one to remain largely intact",
                            Name = "Pyramids of Giza"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Entities.TourCoordinator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("TourCoordinators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 4,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 5,
                            Name = "Jane Smith"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 6,
                            Name = "Robert Johnson"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 7,
                            Name = "Mary Davis"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 8,
                            Name = "James Brown"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 8,
                            Name = "Patricia Garcia"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 10,
                            Name = "Michael Miller"
                        },
                        new
                        {
                            Id = 8,
                            CityId = 11,
                            Name = "Linda Martinez"
                        },
                        new
                        {
                            Id = 9,
                            CityId = 12,
                            Name = "William Rodriguez"
                        },
                        new
                        {
                            Id = 10,
                            CityId = 13,
                            Name = "Elizabeth Taylor"
                        },
                        new
                        {
                            Id = 11,
                            CityId = 11,
                            Name = "David Anderson"
                        },
                        new
                        {
                            Id = 12,
                            CityId = 12,
                            Name = "Jennifer Thomas"
                        },
                        new
                        {
                            Id = 13,
                            CityId = 13,
                            Name = "Richard Jackson"
                        },
                        new
                        {
                            Id = 14,
                            CityId = 5,
                            Name = "Susan White"
                        },
                        new
                        {
                            Id = 15,
                            CityId = 6,
                            Name = "Joseph Harris"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Entities.PointOfInterest", b =>
                {
                    b.HasOne("CityInfo.API.Entities.City", "City")
                        .WithMany("PointOfInterests")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityInfo.API.Entities.TourCoordinator", b =>
                {
                    b.HasOne("CityInfo.API.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityInfo.API.Entities.City", b =>
                {
                    b.Navigation("PointOfInterests");
                });
#pragma warning restore 612, 618
        }
    }
}
